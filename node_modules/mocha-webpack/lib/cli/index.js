'use strict';

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _parseArgv = require('./parseArgv');

var _parseArgv2 = _interopRequireDefault(_parseArgv);

var _prepareWebpack = require('./prepareWebpack');

var _prepareWebpack2 = _interopRequireDefault(_prepareWebpack);

var _runner = require('./runner');

var _exists = require('../util/exists');

var _parseConfig = require('./parseConfig');

var _parseConfig2 = _interopRequireDefault(_parseConfig);

var _requireWebpackConfig = require('./requireWebpackConfig');

var _requireWebpackConfig2 = _interopRequireDefault(_requireWebpackConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function resolve(mod) {
  var absolute = (0, _exists.existsFileSync)(mod) || (0, _exists.existsFileSync)(mod + '.js');
  var file = absolute ? _path2.default.resolve(mod) : mod;
  return file;
}

var cliOptions = (0, _parseArgv2.default)(process.argv.slice(2), true);
var configOptions = (0, _parseConfig2.default)(cliOptions.opts);
var defaultOptions = (0, _parseArgv2.default)([]);

var options = _lodash2.default.defaults({}, cliOptions, configOptions, defaultOptions);

options.require.forEach(function (mod) {
  require(resolve(mod)); // eslint-disable-line global-require
});

options.include = options.include.map(resolve);

options.webpackConfig = (0, _requireWebpackConfig2.default)(options.webpackConfig);

(0, _prepareWebpack2.default)(options, function (err, webpackConfig) {
  if (err) {
    throw err;
  } else if (options.watch) {
    (0, _runner.watch)(options, webpackConfig);
  } else {
    (0, _runner.run)(options, webpackConfig);
  }
});